name: rust
"on":
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - staging
      - trying
env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  format:
    name: stable / format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Check formatting
        run: cargo fmt --check
  lint:
    name: stable / lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Check lints
        run: cargo clippy -- -D warnings
  linux:
    name: linux / stable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
      - name: Install cargo-nextest
        uses: taiki-e/install-action@7522ae03ca435a0ad1001ca93d6cd7cb8e81bd2f
        with:
          tool: cargo-nextest
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Compile tests
        run: cargo test --locked --no-run
      - name: Run tests
        run: cargo nextest run --locked
  msrv:
    name: msrv / compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Get MSRV from package metadata
        id: msrv
        run: awk -F '"' '/rust-version/{ print "version=" $2 }' Cargo.toml >> $GITHUB_OUTPUT
      - name: Install ${{ steps.msrv.outputs.version }} Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: ${{ steps.msrv.outputs.version }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Check packages and dependencies for errors
        run: cargo check --locked
  bors:
    name: bors needs met for rust
    needs:
      - format
      - lint
      - linux
      - msrv
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 'Check status of job_id: format'
        run: '[[ "${{ needs.format.result }}" = "success" ]] && exit 0 || exit 1'
      - name: 'Check status of job_id: lint'
        run: '[[ "${{ needs.lint.result }}" = "success" ]] && exit 0 || exit 1'
      - name: 'Check status of job_id: linux'
        run: '[[ "${{ needs.linux.result }}" = "success" ]] && exit 0 || exit 1'
      - name: 'Check status of job_id: msrv'
        run: '[[ "${{ needs.msrv.result }}" = "success" ]] && exit 0 || exit 1'
