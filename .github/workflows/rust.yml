# This file is generated by .github/cue/ci_tool.cue; DO NOT EDIT!

name: rust
"on":
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - staging
      - trying
env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  changes:
    name: detect file changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      github-actions: ${{ steps.filter.outputs.github-actions }}
      github-actions_files: ${{ steps.filter.outputs.github-actions_files }}
      markdown: ${{ steps.filter.outputs.markdown }}
      markdown_files: ${{ steps.filter.outputs.markdown_files }}
      rust: ${{ steps.filter.outputs.rust }}
      rust_files: ${{ steps.filter.outputs.rust_files }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          fetch-depth: 20
      - name: Filter changed repository files
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
        id: filter
        with:
          list-files: shell
          filters: |
            github-actions:
              - .github/**/*.yml
              - .github/cue/**/*.cue
            markdown:
              - added|modified: '**/*.md'
            rust:
              - '**/*.rs'
              - '**/Cargo.*'
              - .github/workflows/rust.yml
  check:
    name: check
    needs:
      - changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
        with:
          shared-key: workflow
      - name: Check packages and dependencies for errors
        run: cargo check --locked
  format:
    name: format
    needs:
      - changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
        with:
          shared-key: workflow
      - name: Check formatting
        run: cargo fmt --check
  lint:
    name: lint
    needs:
      - changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
        with:
          shared-key: workflow
      - name: Check lints
        run: cargo clippy --no-deps -- -D warnings
  testStable:
    name: test / stable
    needs:
      - check
      - format
      - lint
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Install cargo-nextest
        uses: taiki-e/install-action@a24dd0e0c4266ae898414a44466cc7ce1445b31a
        with:
          tool: cargo-nextest
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
        with:
          shared-key: workflow
      - name: Compile tests
        run: cargo test --locked --no-run
      - name: Run tests
        run: cargo nextest run --locked
      - name: Run doctests
        run: cargo test --locked --doc
  checkMsrv:
    name: check / msrv
    needs:
      - check
      - format
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Get MSRV from package metadata
        id: msrv
        run: awk -F '"' '/rust-version/{ print "version=" $2 }' Cargo.toml >> $GITHUB_OUTPUT
      - name: Install ${{ steps.msrv.outputs.version }} Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: ${{ steps.msrv.outputs.version }}
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
        with:
          shared-key: workflow
      - name: Check packages and dependencies for errors
        run: cargo check --locked
  bors:
    name: bors needs met for rust
    needs:
      - testStable
      - checkMsrv
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 'Check status of job_id: testStable'
        run: |-
          RESULT="${{ needs.testStable.result }}";
          if [[ $RESULT == "success" || $RESULT == "skipped" ]]; then
              exit 0
          else
              echo "***"
              echo "Error: The required job did not pass."
              exit 1
          fi
      - name: 'Check status of job_id: checkMsrv'
        run: |-
          RESULT="${{ needs.checkMsrv.result }}";
          if [[ $RESULT == "success" || $RESULT == "skipped" ]]; then
              exit 0
          else
              echo "***"
              echo "Error: The required job did not pass."
              exit 1
          fi
