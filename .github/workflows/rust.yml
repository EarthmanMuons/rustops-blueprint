name: rust
"on":
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - staging
      - trying
env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Check packages and dependencies for errors
        run: cargo check --locked
  format:
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Check formatting
        run: cargo fmt --check
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Check lints
        run: cargo clippy -- -D warnings
  testStable:
    name: test / stable
    needs:
      - check
      - format
      - lint
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
      - name: Install cargo-nextest
        uses: taiki-e/install-action@7522ae03ca435a0ad1001ca93d6cd7cb8e81bd2f
        with:
          tool: cargo-nextest
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Compile tests
        run: cargo test --locked --no-run
      - name: Run tests
        run: cargo nextest run --locked
  checkMsrv:
    name: check / msrv
    needs:
      - check
      - format
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Get MSRV from package metadata
        id: msrv
        run: awk -F '"' '/rust-version/{ print "version=" $2 }' Cargo.toml >> $GITHUB_OUTPUT
      - name: Install ${{ steps.msrv.outputs.version }} Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: ${{ steps.msrv.outputs.version }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f
      - name: Check packages and dependencies for errors
        run: cargo check --locked
  bors:
    name: bors needs met for rust
    needs:
      - testStable
      - checkMsrv
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 'Check status of job_id: testStable'
        run: |-
          RESULT="${{ needs.testStable.result }}";
          if [[ $RESULT == "success" || $RESULT == "skipped" ]]; then
              exit 0
          else
              echo "***"
              echo "Error: The required job did not pass."
              exit 1
          fi
      - name: 'Check status of job_id: checkMsrv'
        run: |-
          RESULT="${{ needs.checkMsrv.result }}";
          if [[ $RESULT == "success" || $RESULT == "skipped" ]]; then
              exit 0
          else
              echo "***"
              echo "Error: The required job did not pass."
              exit 1
          fi
